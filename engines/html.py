# -*- coding: utf-8 -*-
from engines.utils import use_item
import json


def write_tests(output_filename, siteTests, sites):
    test = json.dumps(siteTests, indent=4)
    print('A', test)

    root_filepath = output_filename.removesuffix('.htm')

    prefix = '-'
    if root_filepath.endswith('/') or root_filepath.endswith('\\'):
        prefix = ''

    overview_filepath = root_filepath + prefix + 'overview.htm'
    sites_filepath = root_filepath + prefix + 'sites.htm'
    tests_filepath = root_filepath + prefix + 'tests.htm'
    categories_filepath = root_filepath + prefix + 'categories.htm'
    features_filepath = root_filepath + prefix + 'features.htm'

    index_content = get_overview_content(
        sites_filepath, tests_filepath, categories_filepath, features_filepath)
    with open(overview_filepath, 'w') as outfile:
        outfile.write(index_content)

    sites_content = get_sites_content(sites, siteTests, overview_filepath)
    with open(sites_filepath, 'w') as outfile:
        outfile.write(sites_content)

    tests_content = get_tests_content(siteTests, overview_filepath)
    with open(tests_filepath, 'w') as outfile:
        outfile.write(tests_content)

    categories_content = get_categories_content(siteTests, overview_filepath)
    with open(categories_filepath, 'w') as outfile:
        outfile.write(categories_content)

    features_content = get_features_content(siteTests, overview_filepath)
    with open(features_filepath, 'w') as outfile:
        outfile.write(features_content)


def get_overview_content(sites_filepath, tests_filepath, categories_filepath, features_filepath):
    index_content = """<!DOCTYPE html><html lang="en" class="no-js"><head><meta charset="utf-8" /><meta name="viewport" content="width=device-width, initial-scale=1.0"></head><body>
    <h1>Overview</h1>
    <p>
        The results that are showed here has been generated by the open source tool webperf-core.
    </p>

    <h2>Sites</h2>
    <p>
        This section will show results from a website/url focused way.<br />
        <a href="../{0}">Read more about sites</a>
    </p>
    <h2>Tests</h2>
    <p>
        This section will show results from a test focused way.<br />
        <a href="../{1}">Read more about tests</a>
    </p>
    <h2>Categories</h2>
    <p>
        This section will show results from a category focused way.<br />
        <a href="../{2}">Read more about categories</a>
    </p>
    <h2>Features</h2>
    <p>
        This section will show results from a feature focused way.<br />
        <a href="../{3}">Read more about features</a>
    </p>
    </body></html>""".format(sites_filepath, tests_filepath, categories_filepath, features_filepath)

    return index_content


def get_site_item(site):
    return """<li><a href="..\site-{0}.html">{1}</a></li>\r\n""".format(site[0], site[1])


def get_sites_content(sites, test_results, overview_filepath):
    test = json.dumps(sites, indent=4)
    # print('A', test)

    items = list(map(get_site_item, sites))

    index_content = """<!DOCTYPE html><html lang="en" class="no-js"><head><meta charset="utf-8" /><meta name="viewport" content="width=device-width, initial-scale=1.0"></head><body>
    <h1>Sites</h1>
    <p>
        This section will show results from a website/url focused way.<br />
    </p>

    <ol>
        {0}
    </ol>

    <h2>RAW:</h2>
    <p>
        This section will show the raw JSON data from webperf-core
    </p>
    <code><pre>{1}</pre></code>
    </body></html>""".format(''.join(items), test)

    return index_content


def get_tests_content(test_results, overview_filepath):
    test = json.dumps(test_results, indent=4)
    print('A', test)

    index_content = """<!DOCTYPE html><html lang="en" class="no-js"><head><meta charset="utf-8" /><meta name="viewport" content="width=device-width, initial-scale=1.0"></head><body>
    <h1>Tests</h1>
    <p>
        This section will show results from a test focused way.<br />
    </p>

    <h2>TEST X</h2>
    <p>
        This test test X
    </p>

    <h3>Test Weight/Percental</h3>
    <p>
        Skriv ut hur testets betyg fördelas, förslagsvis enligt nedan utifrån testets precentil:
        0-10,           1,0
        10-20,          1,5
        20-30,          2,0
        30-40,          2,5
        40-50,          3,0
        50-60,          3,0
        60-70,          3,5
        70-80,          4,0
        80-90,          4,5
        90-100          5,0
    </p>

    <h3>Sites</h3>
    <p>
        Webbplatser och dess placering med högst betyg först.
    </p>
    <ol>
        <li>{0}</li>
    </ol>

    <h2>RAW:</h2>
    <p>
        This section will show the raw JSON data from webperf-core
    </p>
    <code><pre>{1}</pre></code>
    </body></html>""".format(test_results, test)

    return index_content


def get_categories_content(test_results, overview_filepath):
    test = json.dumps(test_results, indent=4)
    print('A', test)

    index_content = """<!DOCTYPE html><html lang="en" class="no-js"><head><meta charset="utf-8" /><meta name="viewport" content="width=device-width, initial-scale=1.0"></head><body>
    <h1>Categories</h1>
    <p>
        This section will show results from a category focused way.<br />
    </p>

    <ol>
        <li>{0}</li>
    </ol>

    <h2>RAW:</h2>
    <p>
        This section will show the raw JSON data from webperf-core
    </p>
    <code><pre>{1}</pre></code>
    </body></html>""".format(test_results, test)

    return index_content


def get_features_content(test_results, overview_filepath):
    test = json.dumps(test_results, indent=4)
    print('A', test)

    index_content = """<!DOCTYPE html><html lang="en" class="no-js"><head><meta charset="utf-8" /><meta name="viewport" content="width=device-width, initial-scale=1.0"></head><body>
    <h1>Features</h1>
    <p>
        This section will show results from a feature focused way.<br />
    </p>

    <ol>
        <li>{0}</li>
    </ol>

    <h2>RAW:</h2>
    <p>
        This section will show the raw JSON data from webperf-core
    </p>
    <code><pre>{1}</pre></code>
    </body></html>""".format(test_results, test)

    return index_content
